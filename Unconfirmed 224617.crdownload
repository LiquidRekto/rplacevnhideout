import selenium
import time
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from seleniumrequests import webdriver
from selenium.webdriver.common.by import By

driver = webdriver.Chrome()

driver.get("https://www.reddit.com/login/?dest=https%3A%2F%2Fwww.reddit.com%2Fr%2Fplace%2F%3Fscreenmode%3Dfullscreen%26cx%3D168%26cy%3D245%26px%3D19")

def login(driver: webdriver.Chrome | webdriver.Firefox, username: str, password: str):
    # Đăng nhập vào reddit
    username_box = driver.find_element(By.ID, "loginUsername")
    password_box = driver.find_element(By.ID, "loginPassword")
    username_box.clear()
    username_box.send_keys(username)
    password_box.clear()
    password_box.send_keys(password)
    # Bấm nút đăng nhập
    password_box.send_keys(Keys.ENTER)

    # r/place canvas là một iframe, source là https://garlic-bread.reddit.com.
    # ID của iframe này thay đổi sau mỗi reload, phải fetch lại
    time.sleep(3)
    driver.switch_to.frame(driver.execute_script('return document.getElementsByTagName("iframe");')[1])
    # vvv Tổn thọ 10 năm mới tìm ra được cái selector này
    driver.execute_script("""
        document.getElementsByTagName("garlic-bread-app")[0].childNodes[1].children[1]
        .shadowRoot.children[1].shadowRoot.children[1].children[0].click();
    """)

def set_pixel(driver: webdriver.Chrome | webdriver.Firefox, coord: tuple[int, int], color: int, canvas: int):
    driver.request(
        'POST', 
        "https://gql-realtime-2.reddit.com/query", 
        data={
            "operationName": "setPixel",
            "variables": {
                "input": {
                    "actionName": "r/replace:set_pixel",
                    "PixelMessageData": {
                        "coordinate": {
                            "x": coord[0],
                            "y": coord[1]
                        },
                        "colorIndex": 2,
                        "canvasIndex": 4
                    }
                }
            },
            "query": "mutation setPixel($input: ActInput!) {\n  act(input: $input) {\n    data {\n      ... on BasicMessage {\n        id\n        data {\n          ... on GetUserCooldownResponseMessageData {\n            nextAvailablePixelTimestamp\n            __typename\n          }\n          ... on SetPixelResponseMessageData {\n            timestamp\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n"
        }
    )




login(driver, "username", "password")
set_pixel(driver, (0, 0), 2, 4)
